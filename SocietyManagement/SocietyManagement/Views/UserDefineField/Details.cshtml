@model SocietyManagement.Models.UserDefineField

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>UserDefineField</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.TableName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TableName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FieldName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FieldName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsDispaly)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsDispaly)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsActive)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FieldLable)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FieldLable)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ControlType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ControlType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FieldType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FieldType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DefaultValue)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DefaultValue)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsRequired)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsRequired)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsRangeValidator)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsRangeValidator)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MinimumValue)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MinimumValue)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MaximumValue)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MaximumValue)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsRegularExpression)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsRegularExpression)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RegularExpression)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RegularExpression)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UserID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UpdatedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UpdatedDate)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.UDFID }) |
    <a class="btn btn-success" href="#" onclick="goBack()" title="Go Back"><span class="fa fa-backward"></span> Back</a>
</p>
