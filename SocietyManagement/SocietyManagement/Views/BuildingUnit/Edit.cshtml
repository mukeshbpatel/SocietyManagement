@model SocietyManagement.Models.BuildingUnit

@{
    ViewBag.Title = "Building Unit";
}

<div class="box-header with-border">
    <h3 class="box-title"><i class="fa fa-cubes"></i> @ViewBag.Title</h3>
</div>  
@using (Html.BeginForm("Edit", "BuildingUnit", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="box-body">
        <div class="form-horizontal">           
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UnitID)
            @Html.HiddenFor(model => model.CreatedDate)

            <div class="form-group">
                @Html.LabelFor(model => model.BuildingID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("BuildingID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BuildingID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UnitName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UnitName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnitName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UnitTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UnitTypeID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UnitTypeID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OwnerID,  htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("OwnerID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OwnerID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OneTimeMaintenance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OneTimeMaintenance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OneTimeMaintenance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UnitArea, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UnitArea, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnitArea, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Files, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Files, "", new { @type = "file", @multiple = "multiple", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.UDK1)
            @Html.HiddenFor(model => model.UDK2)
            @Html.HiddenFor(model => model.UDK3)
            @Html.HiddenFor(model => model.UDK4)
            @Html.HiddenFor(model => model.UDK5)

            
        </div>

    </div>
    <div class="box-footer">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-primary" type="submit"><i class="fa fa-save"></i> Save</button>
                <a href="#" onclick="goBack()" title="Go Back" class="btn btn-default"><i class="fa fa-backward"></i> Back</a>
            </div>
        </div>
    </div>
}





    @if (Model.BuildingUnitMedias.Count > 0)
    {
        <div class="box-header with-border">
            <h4 class="box-title"><i class="fa fa-files-o"></i> Unit Files</h4>
        </div>
      
        <div class="box-body">
            <table class="table table-sm table-hover table-responsive table-condensed table-bordered">
                <tr>
                    <th>File Name</th>
                    <th>File Type</th>
                    <th class="hidden-xs">Details</th>
                    <th></th>
                </tr>
                @foreach (var media in Model.BuildingUnitMedias.Where(d => d.IsDeleted == false))
                {
                <tr id="row_@media.MediaID">
                    <td>
                        <a href="@Url.Action("DownloadFile", new { id = media.MediaID })" title="Download">@media.MediaTitle</a>
</td>
                    <td>
                        @SocietyManagement.Models.Helper.GetFileType(media.MediaType, media.MediaTitle)
                    </td>
                    <td class="hidden-xs">
                        @Html.DisplayFor(itemModel => media.Details)
                    </td>
                    <td>                        
                        @if (User.IsInRole("Admin") || User.IsInRole("SuperUser"))
                    {
                            <a href="@Url.Action("Edit","BuildingUnitMedia", new { id = media.MediaID })" title="Edit"><i class="fa fa-edit"></i></a>
                            <a href="@Url.Action("Delete","BuildingUnitMedia", new { id = media.MediaID })" title="Delete"><i class="fa fa-remove"></i></a>
                            }
                    </td>

                </tr>
                }
</table>
            </div>
    }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
